# Use Node.js Alpine LTS as the base image
FROM node:18.20.2-alpine AS development

# Set environment variables
ENV CI=true
ENV PORT=3000

# Set the working directory
WORKDIR /app

# Copy package files and install dependencies (non-dev)
COPY package*.json ./
RUN npm ci
RUN npm install typescript --save-dev

# Copy the rest of the application code
COPY . .

# Build the application for production
RUN npm run build

# Stage for running in development mode (optional)
FROM build AS dev-envs

# Install additional tools for development (e.g., git)
RUN apk add --no-cache git

# Create a non-root user (optional)
RUN addgroup -S appgroup && adduser -S appuser -G appgroup
USER appuser

# Expose the port for the frontend
EXPOSE 3000

# Start the application in development mode (if using dev-envs stage)
CMD ["npm", "start"]

# Stage for production using Nginx Alpine
FROM node:18.20.2-alpine AS production

# Copy the built application from the builder stage
COPY --from=build /app/dist /usr/share/nginx/html

# Set working directory
WORKDIR /usr/share/nginx/html

# Expose the port for the frontend
EXPOSE 80

# Install serve
RUN npm install -g serve

# Start the application using serve
CMD ["serve", "-s", "build", "-l", "80"]
